Выполним несколько запросов, чтобы освежить знания SQL (песочница).


ГРУППИРОВКА И СОРТИРОВКА

Сколько городов в каждом из федеральных округов?

select
  federal_district as district,
  count(*) as city_count
from city
group by federal_district
order by city_count desc;
┌───────────────────┬────────────┐
│     district      │ city_count │
├───────────────────┼────────────┤
│ Центральный       │ 304        │
│ Приволжский       │ 200        │
│ Северо-Западный   │ 148        │
│ Уральский         │ 115        │
│ Сибирский         │ 114        │
│ Южный             │ 96         │
│ Дальневосточный   │ 82         │
│ Северо-Кавказский │ 58         │
└───────────────────┴────────────┘

ФИЛЬТРАЦИЯ

У каких городов в названии есть слово «Красный»?

select address
from city
where city like '%Красный%';
┌─────────────────────────────────┐
│             address             │
├─────────────────────────────────┤
│ Ростовская обл, г Красный Сулин │
│ Саратовская обл, г Красный Кут  │
│ Тверская обл, г Красный Холм    │
└─────────────────────────────────┘
Какие города появились за последние 30 лет?

select region, city, foundation_year
from city
where foundation_year between 1990 and 2020;
┌───────────┬───────────┬─────────────────┐
│  region   │   city    │ foundation_year │
├───────────┼───────────┼─────────────────┤
│ Ингушетия │ Магас     │ 1995            │
│ Татарстан │ Иннополис │ 2012            │
└───────────┴───────────┴─────────────────┘
Или так:

select region, city, foundation_year
from city
where
  foundation_year between date('now', '-30 years') and date('now');
┌───────────┬───────────┬─────────────────┐
│  region   │   city    │ foundation_year │
├───────────┼───────────┼─────────────────┤
│ Ингушетия │ Магас     │ 1995            │
│ Татарстан │ Иннополис │ 2012            │
└───────────┴───────────┴─────────────────┘
Сколько городов в Приволжском и Уральском округах?

select count(*)
from city
where
  federal_district in ('Приволжский', 'Уральский');
┌──────────┐
│ count(*) │
├──────────┤
│ 315      │
└──────────┘

ПОДЗАПРОСЫ

Сколько городов было основано в каждом веке?

with history as (
  select
    city,
    (foundation_year/100)+1 as century
  from city
)

select
  century || '-й век' as dates,
  count(*) as city_count
from history
group by century
order by century desc;
┌──────────┬────────────┐
│  dates   │ city_count │
├──────────┼────────────┤
│ 21-й век │ 1          │
│ 20-й век │ 263        │
│ 19-й век │ 189        │
│ 18-й век │ 191        │
│ 17-й век │ 137        │
│ 16-й век │ 79         │
│ 15-й век │ 39         │
│ 14-й век │ 38         │
│ 13-й век │ 27         │
│ 12-й век │ 44         │
│ 11-й век │ 8          │
│ 10-й век │ 6          │
│ 9-й век  │ 4          │
│ 5-й век  │ 2          │
│ 3-й век  │ 1          │
│ 1-й век  │ 88         │
└──────────┴────────────┘
Разберем запрос по порядку:

select
  city,
  (foundation_year/100)+1 as century
from city
Селект для каждого города определяет век, в котором тот был основан.

with history as (
  select ...
)
Выражение with history as (...) создает именованный запрос. Название — history, а содержание — селект в скобках (век основания для каждого города). К history можно обращаться по имени в остальном запросе, что мы и делаем.

Строго говоря, селект в блоке with называют «табличным выражением» (common table expression, CTE). Так что если встретите в документации — не удивляйтесь. Запомните главное: это обычный селект, к которому можно для краткости обращаться по имени, как к таблице.

with history as (...)

select
  century || '-й век' as dates,
  count(*) as city_count
from history
group by century
order by century desc;
Для каждого века посчитали количество городов, отсортировали по убыванию века.

Возможно, вы заметили, что подозрительно много городов были основаны в первом веке. Действительно, это неспроста: в столбце foundation_year есть проблемные значения, из-за которых запрос «врет». Разберемся с этим в следующем модуле.