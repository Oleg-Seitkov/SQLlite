Всем хороша таблица city, только данных в ней перебор. Что, если нам нужны только идентификаторы и названия городов Самарской области? Давайте выгрузим их в CSV:

$ sqlite3 city-1.db
SQLite version 3.38.0 2022-02-22 18:58:40
Enter ".help" for usage hints.
sqlite> .mode csv
sqlite> .once samara.csv
sqlite> select kladr_id, city from city where region = 'Самарская';
sqlite> .exit
В песочнице запрещена запись на диск. Поэтому там команды из этого урока будут выводить результаты не в файл, а на экран.

Разберемся, что здесь произошло:

.mode csv включает вывод результатов запроса в формате CSV (вместо обычного табличного)
.once samara.csv направляет вывод результатов запроса в файл samara.csv (вместо печати на экран)
select ... выполняет запрос и выводит результаты в соответствии с .mode и .once — в файл samara.csv в CSV-формате.
В результате в samara.csv ровно то, что требуется:

6300000200000,"Жигулевск"
6300001000000,"Кинель"
6301700100000,"Нефтегорск"
6300000300000,"Новокуйбышевск"
6300000400000,"Октябрьск"
6300000500000,"Отрадный"
6300000900000,"Похвистнево"
6300000100000,"Самара"
6300000800000,"Сызрань"
6300000700000,"Тольятти"
Кроме .once есть команда .output, которая тоже направляет вывод в указанный файл. Вот в чем разница:

.once samara.csv действует только для следующей команды (select from city в нашем примере). Если выполнить еще один селект — его результаты уже пойдут не в файл, а на экран.
.output samara.csv действует до тех пор, пока не будет явно отменена. Сколько бы селектов вы не выполнили, их результаты SQLite запишет в samara.csv. Отменить можно, выполнив еще один .output без параметров.
С .output легко наделать ошибок, поэтому я предпочитаю всегда использовать .once.

.once создает файл в кодировке UTF-8, так что если захотите открыть его в Excel — используйте функцию «Данные > Из CSV-файла».

Экспорт в CSV
Если вы когда-нибудь экспортировали CSV из других программ, то, возможно, встречали настройки экспорта:

выводить заголовки столбцов или нет;
какой разделитель полей использовать;
кавычить значения или нет;
какую кодировку использовать.
Посмотрим, как меняются эти параметры в SQLite. Для наглядности будем выводить результаты не в файл, а на экран.

Вывод по умолчанию
Без заголовков, разделитель — запятая.

.mode csv
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
6300000200000,"Жигулевск"
6300001000000,"Кинель"
6301700100000,"Нефтегорск"
С заголовками
.mode csv
.headers on
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
kladr_id,city
6300000200000,"Жигулевск"
6300001000000,"Кинель"
6301700100000,"Нефтегорск"
С другим разделителем
.mode csv
.headers on
.separator ;
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
kladr_id;city
6300000200000;"Жигулевск"
6300001000000;"Кинель"
6301700100000;"Нефтегорск"
Не кавычить значения
.mode list
.headers on
.separator ,
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
kladr_id,city
6300000200000,Жигулевск
6300001000000,Кинель
6301700100000,Нефтегорск
Здесь используется .mode list вместо .mode csv. Режим csv всегда кавычит значения, так что если кавычки категорически не нужны — используйте list.

Изменить кодировку
А вот кодировку никак не изменить. SQLite выгружает данные в UTF-8.

CSV — проверенный универсальный формат. Но что, если удобнее выгрузить в другом? SQLite это умеет.

JSON
.mode json
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
[{"kladr_id":"6300000200000","city":"Жигулевск"},
{"kladr_id":"6300001000000","city":"Кинель"},
{"kladr_id":"6301700100000","city":"Нефтегорск"}]
Команды INSERT
Удобно, если хотите быстро вставить данные в другую БД. Можно указать имя таблицы, в которую INSERT вставит данные (cities вместо city в примере):

.mode insert cities
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
INSERT INTO cities(kladr_id,city) VALUES('6300000200000','Жигулевск');
INSERT INTO cities(kladr_id,city) VALUES('6300001000000','Кинель');
INSERT INTO cities(kladr_id,city) VALUES('6301700100000','Нефтегорск');
Markdown и HTML
.mode markdown
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
|   kladr_id    |    city    |
|---------------|------------|
| 6300000200000 | Жигулевск  |
| 6300001000000 | Кинель     |
| 6301700100000 | Нефтегорск |
.mode html
select kladr_id, city
from city
where region = 'Самарская'
limit 3;
<TR><TH>kladr_id</TH>
<TH>city</TH>
</TR>
<TR><TD>6300000200000</TD>
<TD>Жигулевск</TD>
</TR>
<TR><TD>6300001000000</TD>
<TD>Кинель</TD>
</TR>
<TR><TD>6301700100000</TD>
<TD>Нефтегорск</TD>
</TR>
Здорово, правда? Нечасто встретишь такое разнообразие форматов.